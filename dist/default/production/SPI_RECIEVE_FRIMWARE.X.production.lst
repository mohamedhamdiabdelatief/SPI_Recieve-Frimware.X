

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 13:34:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0013                     _SSPBUF	set	19
   169  00A6                     _SSPOV	set	166
   170  0063                     _SSPIF	set	99
   171  005F                     _GIE	set	95
   172  005E                     _PEIE	set	94
   173  00A4                     _CKP	set	164
   174  00A5                     _SSPEN	set	165
   175  00A3                     _SSPM3	set	163
   176  00A2                     _SSPM2	set	162
   177  00A1                     _SSPM1	set	161
   178  00A0                     _SSPM0	set	160
   179  04A0                     _BF	set	1184
   180  0463                     _SSPIE	set	1123
   181  042D                     _TRISA5	set	1069
   182  04F8                     _PCFG0	set	1272
   183  04F9                     _PCFG1	set	1273
   184  04FA                     _PCFG2	set	1274
   185  04FB                     _PCFG3	set	1275
   186  043B                     _TRISC3	set	1083
   187  043C                     _TRISC4	set	1084
   188  043D                     _TRISC5	set	1085
   189  04A7                     _SMP	set	1191
   190  04A6                     _CKE	set	1190
   191                           
   192                           	psect	cinit
   193  000F                     start_initialization:	
   194                           ; #config settings
   195                           
   196  000F                     __initialization:
   197                           
   198                           ; Clear objects allocated to COMMON
   199  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   200  0010                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203  0010                     __end_of__initialization:
   204  0010  0183               	clrf	3
   205  0011  120A  118A  283E   	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMMON
   208  0073                     __pbssCOMMON:
   209  0073                     _Data:
   210  0073                     	ds	1
   211                           
   212                           	psect	cstackCOMMON
   213  0070                     __pcstackCOMMON:
   214  0070                     ?_SPI_Slave_Init:
   215  0070                     ?_main:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ?_ISR:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ??_ISR:	
   222                           ; 1 bytes @ 0x0
   223                           
   224                           
   225                           ; 1 bytes @ 0x0
   226  0070                     	ds	3
   227  0073                     ??_SPI_Slave_Init:
   228  0073                     ??_main:	
   229                           ; 1 bytes @ 0x3
   230                           
   231                           
   232                           	psect	maintext
   233  003E                     __pmaintext:	
   234                           ; 1 bytes @ 0x3
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 20 in file "spi_recieve_frimware.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		status,2, status,0, pclath, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : B00/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0
   257 ;;      Totals:         0       0       0       0       0
   258 ;;Total ram usage:        0 bytes
   259 ;; Hardware stack levels required when called:    2
   260 ;; This function calls:
   261 ;;		_SPI_Slave_Init
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           
   268                           ;psect for function _main
   269  003E                     _main:
   270  003E                     l683:	
   271                           ;incstack = 0
   272                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   273                           
   274                           
   275                           ;spi_recieve_frimware.c: 23:   SPI_Slave_Init();
   276  003E  120A  118A  2014  120A  118A  	fcall	_SPI_Slave_Init
   277  0043                     l55:	
   278                           ;spi_recieve_frimware.c: 25:   while(1)
   279                           
   280  0043                     l56:	
   281                           ;spi_recieve_frimware.c: 26:   {;spi_recieve_frimware.c: 29:   }
   282                           
   283  0043  2843               	goto	l55
   284  0044  120A  118A  280C   	ljmp	start
   285  0047                     __end_of_main:
   286                           
   287                           	psect	text1
   288  0014                     __ptext1:	
   289 ;; *************** function _SPI_Slave_Init *****************
   290 ;; Defined at:
   291 ;;		line 34 in file "spi_recieve_frimware.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		None
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   305 ;;      Params:         0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used:    1
   311 ;; Hardware stack levels required when called:    1
   312 ;; This function calls:
   313 ;;		Nothing
   314 ;; This function is called by:
   315 ;;		_main
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           
   320                           ;psect for function _SPI_Slave_Init
   321  0014                     _SPI_Slave_Init:
   322  0014                     l669:	
   323                           ;incstack = 0
   324                           ; Regs used in _SPI_Slave_Init: []
   325                           
   326                           
   327                           ;spi_recieve_frimware.c: 37:   SSPM0 = 0;
   328  0014  1283               	bcf	3,5	;RP0=0, select bank0
   329  0015  1303               	bcf	3,6	;RP1=0, select bank0
   330  0016  1014               	bcf	20,0	;volatile
   331                           
   332                           ;spi_recieve_frimware.c: 38:   SSPM1 = 0;
   333  0017  1094               	bcf	20,1	;volatile
   334                           
   335                           ;spi_recieve_frimware.c: 39:   SSPM2 = 1;
   336  0018  1514               	bsf	20,2	;volatile
   337                           
   338                           ;spi_recieve_frimware.c: 40:   SSPM3 = 0;
   339  0019  1194               	bcf	20,3	;volatile
   340                           
   341                           ;spi_recieve_frimware.c: 42:   SSPEN = 1;
   342  001A  1694               	bsf	20,5	;volatile
   343                           
   344                           ;spi_recieve_frimware.c: 44:   CKP = 0;
   345  001B  1214               	bcf	20,4	;volatile
   346                           
   347                           ;spi_recieve_frimware.c: 45:   CKE = 0;
   348  001C  1683               	bsf	3,5	;RP0=1, select bank1
   349  001D  1303               	bcf	3,6	;RP1=0, select bank1
   350  001E  1314               	bcf	20,6	;volatile
   351                           
   352                           ;spi_recieve_frimware.c: 47:   SMP = 0;
   353  001F  1394               	bcf	20,7	;volatile
   354                           
   355                           ;spi_recieve_frimware.c: 49:   TRISC5 = 0;
   356  0020  1287               	bcf	7,5	;volatile
   357                           
   358                           ;spi_recieve_frimware.c: 50:   TRISC4 = 1;
   359  0021  1607               	bsf	7,4	;volatile
   360                           
   361                           ;spi_recieve_frimware.c: 51:   TRISC3 = 1;
   362  0022  1587               	bsf	7,3	;volatile
   363                           
   364                           ;spi_recieve_frimware.c: 52:   PCFG3 = 0;
   365  0023  119F               	bcf	31,3	;volatile
   366                           
   367                           ;spi_recieve_frimware.c: 53:   PCFG2 = 1;
   368  0024  151F               	bsf	31,2	;volatile
   369                           
   370                           ;spi_recieve_frimware.c: 54:   PCFG1 = 0;
   371  0025  109F               	bcf	31,1	;volatile
   372                           
   373                           ;spi_recieve_frimware.c: 55:   PCFG0 = 0;
   374  0026  101F               	bcf	31,0	;volatile
   375                           
   376                           ;spi_recieve_frimware.c: 56:   TRISA5 = 1;
   377  0027  1685               	bsf	5,5	;volatile
   378                           
   379                           ;spi_recieve_frimware.c: 58:   SSPIE = 1;
   380  0028  158C               	bsf	12,3	;volatile
   381                           
   382                           ;spi_recieve_frimware.c: 59:   PEIE = 1;
   383  0029  170B               	bsf	11,6	;volatile
   384                           
   385                           ;spi_recieve_frimware.c: 60:   GIE = 1;
   386  002A  178B               	bsf	11,7	;volatile
   387  002B                     l61:
   388  002B  0008               	return
   389  002C                     __end_of_SPI_Slave_Init:
   390                           
   391                           	psect	text2
   392  002C                     __ptext2:	
   393 ;; *************** function _ISR *****************
   394 ;; Defined at:
   395 ;;		line 80 in file "spi_recieve_frimware.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0
   411 ;;      Temps:          3       0       0       0       0
   412 ;;      Totals:         3       0       0       0       0
   413 ;;Total ram usage:        3 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		Interrupt level 1
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _ISR
   424  002C                     _ISR:
   425  002C                     i1l693:
   426                           
   427                           ;spi_recieve_frimware.c: 82:   if(SSPIF)
   428  002C  1283               	bcf	3,5	;RP0=0, select bank0
   429  002D  1303               	bcf	3,6	;RP1=0, select bank0
   430  002E  1D8C               	btfss	12,3	;volatile
   431  002F  2831               	goto	u3_21
   432  0030  2832               	goto	u3_20
   433  0031                     u3_21:
   434  0031  2837               	goto	i1l77
   435  0032                     u3_20:
   436  0032                     i1l695:
   437                           
   438                           ;spi_recieve_frimware.c: 83:   {;spi_recieve_frimware.c: 84:     Data = SSPBUF;
   439  0032  0813               	movf	19,w	;volatile
   440  0033  00F0               	movwf	??_ISR
   441  0034  0870               	movf	??_ISR,w
   442  0035  00F3               	movwf	_Data
   443  0036                     i1l697:
   444                           
   445                           ;spi_recieve_frimware.c: 85:     SSPIF = 0;
   446  0036  118C               	bcf	12,3	;volatile
   447  0037                     i1l77:
   448  0037  0872               	movf	??_ISR+2,w
   449  0038  008A               	movwf	10
   450  0039  0E71               	swapf	??_ISR+1,w
   451  003A  0083               	movwf	3
   452  003B  0EFE               	swapf	btemp,f
   453  003C  0E7E               	swapf	btemp,w
   454  003D  0009               	retfie
   455  003E                     __end_of_ISR:
   456  007E                     btemp	set	126	;btemp
   457  007E                     wtemp0	set	126
   458                           
   459                           	psect	intentry
   460  0004                     __pintentry:	
   461                           ;incstack = 0
   462                           ; Regs used in _ISR: [wreg]
   463                           
   464  0004                     interrupt_function:
   465  007E                     saved_w	set	btemp
   466  0004  00FE               	movwf	btemp
   467  0005  0E03               	swapf	3,w
   468  0006  00F1               	movwf	??_ISR+1
   469  0007  080A               	movf	10,w
   470  0008  00F2               	movwf	??_ISR+2
   471  0009  120A  118A  282C   	ljmp	_ISR
   472                           
   473                           	psect	config
   474                           
   475                           ;Config register CONFIG @ 0x2007
   476                           ;	Oscillator Selection bits
   477                           ;	FOSC = EXTRC, RC oscillator
   478                           ;	Watchdog Timer Enable bit
   479                           ;	WDTE = OFF, WDT disabled
   480                           ;	Power-up Timer Enable bit
   481                           ;	PWRTE = OFF, PWRT disabled
   482                           ;	Brown-out Reset Enable bit
   483                           ;	BOREN = OFF, BOR disabled
   484                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   485                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   486                           ;	Data EEPROM Memory Code Protection bit
   487                           ;	CPD = OFF, Data EEPROM code protection off
   488                           ;	Flash Program Memory Write Enable bits
   489                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   490                           ;	In-Circuit Debugger Mode bit
   491                           ;	DEBUG = 0x1, unprogrammed default
   492                           ;	Flash Program Memory Code Protection bit
   493                           ;	CP = OFF, Code protection off
   494  2007                     	org	8199
   495  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _SPI_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Slave_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 13:34:08 2021

                     _BF 04A0                       l61 002B                       l55 0043  
                     l56 0043                      l683 003E                      l669 0014  
                    _CKE 04A6                      _CKP 00A4                      _GIE 005F  
                    _ISR 002C                      _SMP 04A7                     ?_ISR 0070  
                   _PEIE 005E                     i1l77 0037                     _Data 0073  
                   u3_20 0032                     u3_21 0031                     _main 003E  
                   btemp 007E           _SPI_Slave_Init 0014                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _PCFG0 04F8  
                  _PCFG1 04F9                    _PCFG2 04FA                    _PCFG3 04FB  
                  i1l693 002C                    i1l695 0032                    i1l697 0036  
                  _SSPM0 00A0                    _SSPM1 00A1                    _SSPM2 00A2  
                  _SSPM3 00A3                    _SSPIE 0463                    _SSPEN 00A5  
                  _SSPIF 0063                    _SSPOV 00A6                    pclath 000A  
 __end_of_SPI_Slave_Init 002C                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0047                   ??_main 0073  
        ?_SPI_Slave_Init 0070                   _TRISA5 042D                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC5 043D                   _SSPBUF 0013  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 003E               __pintentry 0004                  __ptext1 0014  
                __ptext2 002C             __size_of_ISR 0012         ??_SPI_Slave_Init 0073  
   end_of_initialization 0010      start_initialization 000F              __end_of_ISR 003E  
            __pbssCOMMON 0073                ___latbits 0002        interrupt_function 0004  
          __size_of_main 0009  __size_of_SPI_Slave_Init 0018                 intlevel1 0000  
